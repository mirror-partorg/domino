#!/bin/bash

GROUPNAME=pvsw
USERNAME=domino
USERHANDBOOK=handbook

DOMINO_ROOT=/usr/local/domino
PVSW_ROOT=/usr/local/psql
DOMINO_ETC=$DOMINO_ROOT/etc
DOMINO_BIN=$DOMINO_ROOT/bin
DOMINO_LOG=$DOMINO_ROOT/log
DOMINO_LIB=$DOMINO_ROOT/lib
DOMINO_MAIL=$DOMINO_ROOT/mail

echo "+++++ Checking current user rights..."
UID__=`id | grep "uid=0(root)" | wc -l | tr -d " "`
if [ "X$UID__" = "X1" ] ; then
	echo Passed...
else
	echo "ERROR: The current user id is not root (`id|awk '{print $1}'`)."
	exit 1
fi
echo
echo "+++++ Setting up group..."

/usr/sbin/groupadd $GROUPNAME

chmod -R 751 $DOMINO_LOG
chown $USERNAME:$GROUPNAME $DOMINO_LOG
gpasswd -a $USERNAME audio
gpasswd -a $USERNAME video
if [ ! -d /var/run/domino ] ; then
    mkdir /var/run/domino
fi
chown -R domino /var/run/domino

if [ ! -d $DOMINO_MAIL ] ; then
	mkdir $DOMINO_MAIL
	mkdir $DOMINO_MAIL/in
	mkdir $DOMINO_MAIL/out
	mkdir $DOMINO_MAIL/err
fi
echo +++++ Setting up user $USERNAME...
UPVSWEXISTS=`passwd -Sa | awk {'print $1'} | grep $USERNAME`
if [ "X$UPVSWEXISTS" = "X" ] ; then
	echo Creating user $USERNAME, this may take a while...
	/usr/sbin/useradd -c "Domino daemon" -d $DOMINO_BIN -g $GROUPNAME $USERNAME -s /bin/bash 2>&1
	UPVSWEXISTS=`passwd -Sa | awk {'print $1'} | grep $USERNAME`
	if [ "X$UPVSWEXISTS" = "X" ] ; then
		echo "ERROR: Can not create user $USERNAME"
    		exit 1
	fi
fi
echo +++++ Setting up user $USERHANDBOOK...
UPVSWEXISTS=`passwd -Sa | awk {'print $1'} | grep $USERHANDBOOK`
if [ "X$UPVSWEXISTS" = "X" ] ; then
	echo Creating user $USERHANDBOOK, this may take a while...
	/usr/sbin/useradd -c "Console handbook" -d /home/$USERHANDBOOK -g $GROUPNAME $USERHANDBOOK -p $USERHANDBOOK -s /bin/bash 2>&1
	UPVSWEXISTS=`passwd -Sa | awk {'print $1'} | grep $USERHANDBOOK`
	if [ "X$UPVSWEXISTS" = "X" ] ; then
		echo "ERROR: Can not create user $USERHANDBOOK"
    		exit 1
	fi
fi

echo +++++ Setting up environment...

#sed -i 's/c2:1235:respawn:\/sbin\/agetty 38400 tty2 ssa/c2:1235:respawn:\/sbin\/agetty -n -l \/usr\/local\/domino\/bin\/autologin 38400 tty2 ssa/' /etc/inittab
#sed -i 's/NO_PASSWORD_CONSOLE tty1/NO_PASSWORD_CONSOLE  tty1:tty2/' /etc/login.defs
isql-fb -u sysdba -p SSAFirebird /linuxcash/cash/data/db/cash.gdb << EOF
CREATE VIEW TMC_BY_NAME ( CODE,  NAME, PRICE  ) AS 
   select substring(code from 1 for 5) code, name, max(price) price from tmc where code<>bcode group by substring(code from 1 for 5),name;
   ;
CREATE ASC INDEX I_WORK_TMC_BNAME ON WORK_TMC (NAME);   
EXIT;
EOF

echo umask 022 >$DOMINO_BIN/.bashrc
echo export PVSW_ROOT=$PVSW_ROOT >>$DOMINO_BIN/.bashrc
echo export DOMINO_ROOT=$DOMINO_ROOT >>$DOMINO_BIN/.bashrc
echo export PATH=$PVSW_ROOT/bin:$DOMINO_ROOT/bin:$PATH >>$DOMINO_BIN/.bashrc
echo export LD_LIBRARY_PATH=$PVSW_ROOT/lib:$DOMINO_ROOT/lib:/usr/lib >>$DOMINO_BIN/.bashrc
echo export LD_BIND_NOW=1 >>$DOMINO_BIN/.bashrc
cp $DOMINO_BIN/.bashrc $DOMINO_BIN/.profile
cp $DOMINO_BIN/.bashrc $DOMINO_BIN/.bash_profile


if [ ! -d /home/$USERHANDBOOK ] ; then
    mkdir /home/$USERHANDBOOK
fi
echo umask 022 >/home/$USERHANDBOOK/.bash_profile
echo export PVSW_ROOT=$PVSW_ROOT >>/home/$USERHANDBOOK/.bash_profile
echo export DOMINO_ROOT=$DOMINO_ROOT >>/home/$USERHANDBOOK/.bash_profile
echo export PATH=$PVSW_ROOT/bin:$DOMINO_ROOT/bin:$PATH >>/home/$USERHANDBOOK/.bash_profile
echo export LD_LIBRARY_PATH=$PVSW_ROOT/lib:$DOMINO_ROOT/lib:/usr/lib >>/home/$USERHANDBOOK/.bash_profile
echo export LD_BIND_NOW=1 >>/home/$USERHANDBOOK/.bash_profile
cp /home/$USERHANDBOOK/.bash_profile /home/$USERHANDBOOK/.profile
cp /home/$USERHANDBOOK/.bash_profile /home/$USERHANDBOOK/.bashrc
echo $DOMINO_BIN/handbook.sh >>/home/$USERHANDBOOK/.bash_profile

echo "+++++ Checking psql version..."
VER=`source $DOMINO_BIN/.bashrc ; butil -ver | grep version | awk {'day = strtonum($(NF)); if (day >0) if (day >=10 ) print "10"; else print "9";'} || exit 1`
if [ "X$VER" = "X" ] ; then
	echo "ERROR: Undefined psql version"
	exit 1
else
	echo Passed...
fi
if [ ! -f $DOMINO_ETC/alias/local ] ; then 
    mv $DOMINO_ETC/alias/local.sample $DOMINO_ETC/alias/local
fi 
if [ ! -f $DOMINO_ETC/dclubd.conf ] ; then 
    cp $DOMINO_ETC/dclubd.conf.sample $DOMINO_ETC/dclubd.conf 
fi 
if [ ! -f $DOMINO_ETC/crntsale.conf ] ; then 
    cp $DOMINO_ETC/crntsale.conf.sample $DOMINO_ETC/crntsale.conf 
fi 
if [ ! -f $DOMINO_ETC/exchanged.conf ] ; then 
    cp $DOMINO_ETC/exchanged.conf.sample $DOMINO_ETC/exchanged.conf 
fi 
if [ ! -f $DOMINO_ETC/handbook-text.conf ] ; then 
    cp $DOMINO_ETC/handbook-text.conf.sample $DOMINO_ETC/handbook-text.conf 
fi 
if [ ! -f $DOMINO_ETC/domino.conf ] ; then 
    cp $DOMINO_ETC/domino.conf.sample $DOMINO_ETC/domino.conf
fi 
if [ ! -f $DOMINO_ETC/doshadow ] ; then 
    cp $DOMINO_ETC/doshadow.sample $DOMINO_ETC/doshadow 
fi 
chmod 644 $DOMINO_ETC/doshadow 
chown $USERNAME:$GROUPNAME $DOMINO_ETC/doshadow
cp $DOMINO_ETC/tty2.conf /etc/init/tty2.conf

#sed -i 's/start on runlevel [23]/
#exec \/sbin\/getty -8 38400 tty2 ssa/exec \/bin\/login -f handbook TERM=ssa <\/dev\/tty2 >\/dev\/tty2 2>$1/' /etc/init/tty2.conf
#sed -i 's/exec \/sbin\/getty -8 38400 tty2 ssa/exec \/bin\/login -f handbook TERM=ssa <\/dev\/tty2 >\/dev\/tty2 2>$1/' /etc/init/tty2.conf
#sed -i 's/exec \/sbin\/getty -8 38400 tty2 ssa/exec \/bin\/login -f handbook TERM=ssa <\/dev\/tty2 >\/dev\/tty2 2>$1/' /etc/init/tty2.conf

update-rc.d exchanged defaults
update-rc.d dclubd defaults
chown -R $USERNAME:$GROUPNAME $DOMINO_ROOT
LINE=`/bin/grep check_exchange /etc/crontab`
if [[ $LINE == "" ]] ; then
echo "*/1 * * * * root /usr/local/domino/bin/check_exchange">>/etc/crontab
fi
echo change config
echo $DOMINO_ETC/alias/local localres
echo $DOMINO_ETC/domino.conf local-unit
echo "run /etc/init.d/dclubd start && /etc/init.d/exchanged start && killall -9 handbook"
exit 0
